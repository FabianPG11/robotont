<?xml version="1.0" ?>
<launch>
    <arg name="robotont_ns" default="robotont"/>
    <arg name="linear_update" default="0.01"/>
    <arg name="angular_update" default="0.01"/>
    <arg name="cell_size" default="0.05"/>
    <include file="$(find realsense2_camera)/launch/rs_aligned_depth.launch"></include>
    <rosparam>
        /camera/aligned_depth_to_color/image_raw/compressedDepth/png_level: 5
    </rosparam>
    <group ns="rtabmap">
        <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="--delete_db_on_start">
            <param name="frame_id" type="string" value="base_footprint"/>
            <param name="subscribe_depth" type="bool" value="true"/>
            <!-- <remap from="odom" to="/$(arg robotont_ns)/odom"/> -->
            <remap from="rgb/image" to="/camera/color/image_raw"/>
            <remap from="depth/image" to="/camera/aligned_depth_to_color/image_raw"/>
            <remap from="rgb/camera_info" to="/camera/color/camera_info"/>
            <param name="queue_size" type="int" value="20"/>
            <param name="odom_frame_id" type="string" value="odom"/>
            <!-- RTAB-Map's parameters -->
            <param name="RGBD/AngularUpdate" type="string" value="$(arg angular_update)"/>
            <param name="RGBD/LinearUpdate" type="string" value="$(arg linear_update)"/>
            <param name="RGBD/OptimizeFromGraphEnd" type="string" value="false"/>
            <param name="Grid/FromDepth" type="string" value="true"/>
            <param name="Grid/CellSize" type="double" value="$(arg cell_size)"/>
        </node>
        <node name="laserscan_kinect" pkg="laserscan_kinect" type="laserscan_kinect" >
            <remap from="image" to="/camera/depth/image_rect_raw"/>
            <remap from="camera_info" to="/camera/depth/camera_info"/>
            <rosparam command="load" file="$(find robotont_teleop)/config/laser_params.yaml" />
        </node>
    </group>
    <env name="ROSCONSOLE_FORMAT" value="[${function}] ${message}" />
    <env name="ROSCONSOLE_CONFIG_FILE" value="$(find robotont_driver)/config/console.conf" />
    <rosparam ns="robotont" file="$(find robotont_driver)/config/robotont_params.yaml" command="load" />
    <node ns="$(arg robotont_ns)" pkg="robotont_driver" name="driver_node" type="driver_node" output="screen" />
    <!-- Convert an xacro and put on parameter server -->
    <param name="/robotont/robot_description" command="$(find xacro)/xacro --inorder $(find robotont_description)/xacro/main.urdf.xacro" />
    <!-- State publishers -->
    <node ns="$(arg robotont_ns)" name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <node ns="$(arg robotont_ns)" name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
</launch>
